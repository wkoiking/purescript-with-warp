-- File auto generated by purescript-bridge! --
module Type where

import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Int)

import Prelude

data PureScriptToHaskellMessage =
    UpdateCounterValue Int
  | RequestInitialValue

derive instance genericPureScriptToHaskellMessage :: Generic PureScriptToHaskellMessage _

--------------------------------------------------------------------------------
_UpdateCounterValue :: Prism' PureScriptToHaskellMessage Int
_UpdateCounterValue = prism' UpdateCounterValue f
  where
    f (UpdateCounterValue a) = Just $ a
    f _ = Nothing

_RequestInitialValue :: Prism' PureScriptToHaskellMessage Unit
_RequestInitialValue = prism' (\_ -> RequestInitialValue) f
  where
    f RequestInitialValue = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype HaskellToPureScriptMessage =
    CurrentCounterValue Int

derive instance genericHaskellToPureScriptMessage :: Generic HaskellToPureScriptMessage _
derive instance newtypeHaskellToPureScriptMessage :: Newtype HaskellToPureScriptMessage _

--------------------------------------------------------------------------------
_CurrentCounterValue :: Iso' HaskellToPureScriptMessage Int
_CurrentCounterValue = _Newtype
--------------------------------------------------------------------------------
